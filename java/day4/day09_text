**자바에서 상속을 받을 때는 extends 란 키워드를 사용한다
   자바는 단일 상속 개념이므로 extends로 상속 받을 수 있는 클래스는 단 하나뿐이다.
   1. 오버라이딩(Overriding)
         - 상속 개념과 맞물로 사용
         - 부모로부터 상속 받은 메소드를 재정의해서 사용하는 것 : 재정의

   *****************오버라이딩 조건*********************
    - 오버라이드 하려믄 메소드가 부모 클래스에 존재해야 한다.
    - 메소드 이름이 동일해야 한다.
    - 메소드의 매개변수 갯수, 데이터타입이 같아야 한다.
    - 메소드의 반환타입도 같아야 한다.
    - 메소드의 접근 지정자는 부모클래스와 동일하거나, 접근 범위가 넓어야 한다.
    - Exception의 경우 부모 클래스의 메소드와 동일하거나 두 구체적인 Exception을 발생시켜야 한다.

    ※ super의 사용---------------------------------------
       1) super 변수 : 부모클래스로부터 물려받은 변수
       2) super 메소드 : 메소드
       3) super() : 부모클래스의 생성자
          -super() 역시 생성자 안에서만 호출 가능하며, 생성자의 맨 첫줄에 위치해야 한다.
           super 라는 키워드로 static 메소드 안에서 사용 불가.
           super()는 부모클래스에 생성자가 오버로딩된 형태로 여러 개 존재할 때, 그 중에서 어떤 생성자들 호출할지 결정할 수 있다.
           But! super()생성자를 사용자가 명시적으로 호출하지 않는다면, 컴파일러는 자식클래스 생성자에서
                super()의 디폴트 생성자를 자동으로 호출한다.
    ------------------------------------------------------------------------------------------------------------
    ex)
        class Paent{
           String name;
           public Parent(String n){
           name=n;
           } //인자 생성자
        }///////////////////
        class Son extends Parent{
           public Son(){
             super("아무개");
             //만일 위 문장이 없다면 에러 발생  >>  컴파일러가 super()를 자동 호출함으로
           }
        }
    --------------------------------------------------------------------------------------------------------------
    2. 다중 상속
       -다중 상속은 클래스가 하나 이상의 클래스를 상속받는 것을 뜻한다. 많은 언어들이 다중 상속을
       지원하지만 자바는 다중 상속을 지원하지 않는다.  만약, 자바가 다중 상속을 지원한다면 다음과
       같은 코드가 만들어 질 수 있다.
    ///////////////////////////////////////////////////////////////////////////////
    Class A{
       public void msg(){
          System.out.println("A message");
       }
    }

    Class B {
       public void msg(){
          System.out.println("B message");
       }
    }

    Class C extends A, B{
        public void static main(String[] args){
           C test = new C();
           test.msg();
        }
    }
    -----------------------------------------------------------------------------------------------------
    >다중 상속을 지원한다고 가정하고 A,B 라는 클래스를 다음과 같이 동시에 상속하도록 했다. (실제로는 동작할 수 없는 코드이다.)
     위 main 메소드에서 test.msg(); 실행 시 A 클래스의 msg 메소드를 실행해야 할까?
     아니면, B 클래스의 msg 메소드를 실행해야 할까?
     다중 상속을 지원하게 되면 이렇듯 애매모호한 부분이 생기게 된다.
     자바는 이러한 불명확한 부분을 애초에 잘라 낸 언어이다.

    3. 인터페이스(Interface): 다른 언어들에서는 찾기 힘든 자바의 고급 기능
       인터페이스는 도대체 왜 필요하게 된걸까? 다음의 경우 참고
       *********************************************************
       난 동물원의 사육사이다.
       육식동물이 돌아오면 난 고기를 던져준다.
       호랑이던 사자던 상관하지 않는다.
       이런 케스를 코드로 담아보자.
       **********************************************************
         public class Animal{
             String name;
             public void setName(String name){
                 this.name = name;
             }
         }

         public class Tiger extends Animal{         }

         public class Lion extends Animal{     }

         public class ZooKeeper{
             public void feed(Tiger tiger) {  //메소드 오버로딩
               System.out.println("feed tiger");
             }
             public void feed(Lion lion){ //메소드 오버로딩
               System.out.println("feed lion")
             }
         }
*************************************************************************
